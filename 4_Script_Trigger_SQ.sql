
CREATE OR REPLACE TRIGGER TRIGGER_SQ_PRODUCTO
BEFORE INSERT ON PRODUCTO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_PRODUCTO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_PRODUCTOS.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_PRODUCTO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TRIGGER_SQ_PAIS
BEFORE INSERT ON PAIS -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_PAIS IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_PAIS.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_PAIS --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TRIGGER_SQ_DEPARTAMENTO
BEFORE INSERT ON DEPARTAMENTO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_DEPARTAMENTO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_DEPARTAMENTO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_DEPARTAMENTO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TRIGGER_SQ_MUNICIPIO
BEFORE INSERT ON MUNICIPIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_MUNICIPIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_MUNICIPIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_MUNICIPIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

CREATE OR REPLACE TRIGGER TRIGGER_SQ_DIRECCION
BEFORE INSERT ON DIRECCION -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_DIRECCION IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_DIRECCION.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_DIRECCION --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_PERSONA
BEFORE INSERT ON PERSONA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_PERSONA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_PERSONA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_PERSONA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/


--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_DEVOLUCIONES
BEFORE INSERT ON DEVOLUCIONES -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_DEVOLUCION IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_DEVOLUCIONES.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_DEVOLUCION --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_DESTINATARIO
BEFORE INSERT ON DESTINATARIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_DESTINATARIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_DESTINATARIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_DESTINATARIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_ID_TIPO_PAQUETE
BEFORE INSERT ON ID_TIPO_PAQUETE -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_PAQUETE IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_ID_TIPO_PAQUETE.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_PAQUETE --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_CONTENIDO_ENVIO
BEFORE INSERT ON CONTENIDO_ENVIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_CONTENIDO_ENVIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_CONTENIDO_ENVIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_CONTENIDO_ENVIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_PAQUETE
BEFORE INSERT ON PAQUETE -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_PAQUETE IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_PAQUETE.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_PAQUETE --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_ESTADO
BEFORE INSERT ON TIPO_ESTADO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.TIPO_ESTADO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_ESTADO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TESTADO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_MAN_ESTADOS
BEFORE INSERT ON MAN_ESTADOS -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_ESTADO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_MAN_ESTADO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_ESTADO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_MAN_ESTADOS
BEFORE INSERT ON MAN_ESTADOS -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_ESTADO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_MAN_ESTADO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_ESTADO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_REMITENTE
BEFORE INSERT ON REMITENTE -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_REMITENTE IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_REMITENTE.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_REMITENTE --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_ENVIOS
BEFORE INSERT ON ENVIOS -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_ENVIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_ENVIOS.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_ENVIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_DETALLE_ENVIO
BEFORE INSERT ON DETALLE_ENVIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_DETALLE_ENVIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_DETALLE_ENVIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_DETALLE_ENVIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_SERVICIO
BEFORE INSERT ON SERVICIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_SERVICIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_SERVICIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_SERVICIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_MANEJO
BEFORE INSERT ON MANEJO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_MANEJO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_MANEJO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_MANEJO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_ALERTAS
BEFORE INSERT ON ALERTAS -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_ALERTA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_ALERTAS.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_ALERTA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_GARANTIA
BEFORE INSERT ON GARANTIA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_GARANTIA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_GARANTIA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_GARANTIA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_GARANTIA
BEFORE INSERT ON GARANTIA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_GARANTIA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_GARANTIA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_GARANTIA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_REPARACIONES
BEFORE INSERT ON REPARACIONES -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_REPARACION IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_REPARACIONES.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_REPARACION --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_REPARACIONES
BEFORE INSERT ON REPARACIONES -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_REPARACION IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_REPARACIONES.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_REPARACION --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_CLIENTE
BEFORE INSERT ON CLIENTE -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_CLIENTE IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_CLIENTE.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_CLIENTE --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_CLIENTE
BEFORE INSERT ON TIPO_CLIENTE -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_CLIENTE IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_CLIENTE.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_CLIENTE --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_FACTURA
BEFORE INSERT ON FACTURA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_FACTURA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_FACTURA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_FACTURA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_DETALLE_FACTURA
BEFORE INSERT ON DETALLE_FACTURA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_DETALLE_FACTURA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_DETALLE_FACTURA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_DETALLE_FACTURA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_NEGOCIO
BEFORE INSERT ON NEGOCIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_EMPRESA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_NEGOCIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_EMPRESA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_IMPUESTO
BEFORE INSERT ON IMPUESTO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_IMPUESTO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_IMPUESTO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_IMPUESTO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_IMPUESTO
BEFORE INSERT ON IMPUESTO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_IMPUESTO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_IMPUESTO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_IMPUESTO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_PROMOCION
BEFORE INSERT ON PROMOCION -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_PROMOCION IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_PROMOCION.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_PROMOCION --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_EMAIL
BEFORE INSERT ON EMAIL -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_EMAIL IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_EMAIL.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_EMAIL --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_EMAIL
BEFORE INSERT ON TIPO_EMAIL -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_EMAIL IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_EMAIL.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_EMAIL --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TELEFONO
BEFORE INSERT ON TELEFONO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TELEFONO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TELEFONO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TELEFONO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_TELEFONO
BEFORE INSERT ON TIPO_TELEFONO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TELEFONO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_TELEFONO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TELEFONO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TURNO
BEFORE INSERT ON TURNO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TURNO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TURNO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TURNO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_TURNO
BEFORE INSERT ON TIPO_TURNO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_TURNO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_TURNO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_TURNO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_USUARIO
BEFORE INSERT ON USUARIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_USUARIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_USUARIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_USUARIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_USUARIO
BEFORE INSERT ON TIPO_USUARIO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_USUARIO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_USUARIO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_USUARIO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_CAJA_RECEPTORA
BEFORE INSERT ON CAJA_RECEPTORA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_CAJA_RECEPTORA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_CAJA_RECEPTORA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_CAJA_RECEPTORA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_VENTA
BEFORE INSERT ON VENTA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_VENTA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_VENTA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_VENTA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_TIPO_VENTA
BEFORE INSERT ON TIPO_VENTA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_VENTA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_TIPO_VENTA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_VENTA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_UNIDAD_MEDIDA
BEFORE INSERT ON UNIDAD_MEDIDA -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_UNIDAD_MEDIDA IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_UNIDAD_MEDIDA.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_UNIDAD_MEDIDA --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_PRODUCTO
BEFORE INSERT ON PRODUCTO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_PRODUCTO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_PRODUCTO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_PRODUCTO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_PROVEEDOR
BEFORE INSERT ON PROVEEDOR -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_PROVEEDOR IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_PROVEEDOR.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_PROVEEDOR --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_KARDEX
BEFORE INSERT ON KARDEX -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_KARDEX IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_KARDEX.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_KARDEX --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_CATEGORIA_PRODUCTO
BEFORE INSERT ON CATEGORIA_PRODUCTO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_TIPO_PRODUCTO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_CATEGORIA_PRODUCTO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_TIPO_PRODUCTO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/

--CREAMOS EL DISPARADOR PARA APLICAR LA SECUENCIA EN LA TABLA
CREATE OR REPLACE TRIGGER TRIGGER_SQ_MOVIMIENTO
BEFORE INSERT ON MOVIMIENTO -- INDICAMOS QUE ES ANTES DE CREAR EL VALOR
FOR EACH ROW
 WHEN (new.ID_MOVIMIENTO IS NULL)  --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
BEGIN
  SELECT SQ_MOVIMIENTO.NEXTVAL -- LLAMAMOS A LA SECUENCIA CREADA ANTERIORMENTE
  INTO :new.ID_MOVIMIENTO --CAMBIOS EL ID O PRIMARY KEY DE NUESTRA TABLA
  FROM dual;
END;
/